// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

/// @title BenefitVerifier
/// @notice Verifies zk-SNARK proofs for tokenomics parameter updates
abstract contract BenefitVerifier {
    /// @dev Verifier contract interface generated by snarkjs
    /// Replace the following with your actual generated verifier ABI
    function verifyProof(
        uint[2] calldata a,
        uint[2][2] calldata b,
        uint[2] calldata c,
        uint[1] calldata input
    ) public view virtual returns (bool);

    /// @notice Checks both the zk-proof and some simple onâ€‘chain consistency
    function _verifyBenefit(
        uint[2] calldata a,
        uint[2][2] calldata b,
        uint[2] calldata c,
        uint[1] calldata input,
        uint oldInflation,
        uint newInflation
    ) internal view returns (bool) {
        require(newInflation >= oldInflation, "Inflation must not decrease");
        bool ok = verifyProof(a, b, c, input);
        require(ok, "Invalid zk proof");
        return true;
    }
}
